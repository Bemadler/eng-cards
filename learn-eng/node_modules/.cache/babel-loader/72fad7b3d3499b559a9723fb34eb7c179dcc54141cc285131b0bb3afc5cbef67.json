{"ast":null,"code":"// import React, { useState } from 'react';\n// import styles from './NewWord.module.css';\n\n// const NewWord = ({ onAddWord }) => {\n//   const [newWord, setNewWord] = useState({\n//     english: '',\n//     transcription: '',\n//     russian: '',\n//     tag: ''\n//   });\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewWord(prevState => ({\n//       ...prevState,\n//       [name]: value\n//     }));\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     onAddWord(newWord);\n//     setNewWord({\n//       english: '',\n//       transcription: '',\n//       russian: '',\n//       tags: ''\n//     });\n//   };\n\n//   return (\n//     <div className={styles.NewWord}>\n//       <h2>Добавить новое слово</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           name=\"english\"\n//           value={newWord.english}\n//           onChange={handleChange}\n//           placeholder=\"слово на англ.яз\"\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"transcription\"\n//           value={newWord.transcription}\n//           onChange={handleChange}\n//           placeholder=\"транскрипция\"\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"russian\"\n//           value={newWord.russian}\n//           onChange={handleChange}\n//           placeholder=\"перевод\"\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"tag\"\n//           value={newWord.tag}\n//           onChange={handleChange}\n//           placeholder=\"тег\"\n//         />\n//         <button type=\"submit\" className={styles.button}>Добавить</button>\n//       </form>\n\n//     </div>\n//   );\n// };\n\n// export default NewWord;","map":{"version":3,"names":[],"sources":["/Users/bermetakerova/Documents/Codding/GitHub/eng-cards/learn-eng/src/components/newword/NewWord.jsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import styles from './NewWord.module.css';\n\n// const NewWord = ({ onAddWord }) => {\n//   const [newWord, setNewWord] = useState({\n//     english: '',\n//     transcription: '',\n//     russian: '',\n//     tag: ''\n//   });\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewWord(prevState => ({\n//       ...prevState,\n//       [name]: value\n//     }));\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     onAddWord(newWord);\n//     setNewWord({\n//       english: '',\n//       transcription: '',\n//       russian: '',\n//       tags: ''\n//     });\n//   };\n\n//   return (\n//     <div className={styles.NewWord}>\n//       <h2>Добавить новое слово</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           name=\"english\"\n//           value={newWord.english}\n//           onChange={handleChange}\n//           placeholder=\"слово на англ.яз\"\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"transcription\"\n//           value={newWord.transcription}\n//           onChange={handleChange}\n//           placeholder=\"транскрипция\"\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"russian\"\n//           value={newWord.russian}\n//           onChange={handleChange}\n//           placeholder=\"перевод\"\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"tag\"\n//           value={newWord.tag}\n//           onChange={handleChange}\n//           placeholder=\"тег\"\n//         />\n//         <button type=\"submit\" className={styles.button}>Добавить</button>\n//       </form>\n      \n//     </div>\n//   );\n// };\n\n// export default NewWord; \n\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}